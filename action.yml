name: Tag Comment Bot
author: Casper da Costa-Luis
description: Create tags from issue & PR comments
inputs:
  token:
    description: GitHub Token
    required: false
    default: ${{ github.token }}
runs:
  using: composite
  steps:
  - id: react
    if: >
      contains(fromJSON('["issue_comment", "pull_request_review_comment"]'), github.event_name)
      && github.event.action == 'created'
      && startsWith(github.event.comment.body, '/tag ')
    name: React Seen
    uses: actions/github-script@v7
    with:
      script: |
        const perm = await github.rest.repos.getCollaboratorPermissionLevel({
          owner: context.repo.owner, repo: context.repo.repo,
          username: context.payload.comment.user.login})
        post = (context.eventName == "issue_comment"
          ? github.rest.reactions.createForIssueComment
          : github.rest.reactions.createForPullRequestReviewComment)
        if (!["admin", "write"].includes(perm.data.permission)){
          post({
            owner: context.repo.owner, repo: context.repo.repo,
            comment_id: context.payload.comment.id, content: "laugh"})
          throw "Permission denied for user " + context.payload.comment.user.login
        }
        post({
          owner: context.repo.owner, repo: context.repo.repo,
          comment_id: context.payload.comment.id, content: "eyes"})
      github-token: ${{ inputs.token }}
  - id: tag
    if: steps.react.outcome == 'success'
    name: Tag Commit
    run: |
      git tag $(echo "$BODY" | awk '{print $2" "$3}')
      git push --tags
    shell: bash
    env:
      BODY: ${{ github.event.comment.body }}
      GITHUB_TOKEN: ${{ inputs.token }}
  - if: steps.tag.outcome == 'success'
    name: React Success
    uses: actions/github-script@v7
    with:
      script: |
        post = (context.eventName == "issue_comment"
          ? github.rest.reactions.createForIssueComment
          : github.rest.reactions.createForPullRequestReviewComment)
        post({
          owner: context.repo.owner, repo: context.repo.repo,
          comment_id: context.payload.comment.id, content: "rocket"})
      github-token: ${{ inputs.token }}
branding:
  icon: tag
  color: yellow
